{
  "version": 3,
  "sources": ["../src/main.ts", "../src/settings.ts", "../src/passwordPrompt.ts"],
  "sourcesContent": ["import * as obs from 'obsidian';\nimport SettingsTab from \"./settings.js\";\nimport PasswordPrompt from \"./passwordPrompt.js\";\n\nexport interface Settings {\n    iv: Uint8Array<ArrayBuffer>\n}\n\nexport const ENCRYPTED_NOTE_VIEW = 'encrypted-note-view';\n\nexport const default_settings: Settings = {\n    iv: window.crypto.getRandomValues(new Uint8Array(16))\n};\n\nexport default class EncryptedNote extends obs.Plugin {\n    settingsTab: SettingsTab | null = null;\n    settings: Settings = default_settings;\n\n    async onload() {\n        this.registerExtensions(['enc'], 'markdown');\n\n        this.registerEvent(this.app.workspace.on(\"file-menu\", (menu, file) => menu\n            .addItem(item => item\n                .setTitle(\"Encrypt Note\")\n                .setIcon(\"lock\")\n                .onClick(async _ => {\n                    const pw = await window.crypto.subtle.digest('SHA-256', new TextEncoder().encode(await PasswordPrompt.prompt(this.app, file)));\n                    const key = await window.crypto.subtle.importKey('raw', pw, 'AES-GCM', false, ['encrypt', 'decrypt']);\n\n                    const path = this.app.vault.getFileByPath(file.path);\n\n                    if (!path)\n                        return new obs.Notice(\"File could not be found.\");\n\n                    const cipher = await window.crypto.subtle.encrypt({\n                        name: 'AES-GCM',\n                        iv: this.settings.iv,\n                    }, key, await this.app.vault.readBinary(path));\n\n                    await this.app.vault.rename(file, `${file.path}.enc`);\n                }))));\n\n        this.registerEvent(this.app.workspace.on(\"file-open\", async (file) => {\n                if (file?.extension != 'enc') return;\n\n                console.log('Encrypted file');\n            }));\n\n        this.addSettingTab(new SettingsTab(this.app, this));\n    }\n}", "import * as obs from 'obsidian';\n\nexport default class SettingsTab extends obs.PluginSettingTab {\n    display(): void {\n\n    }\n}", "import * as obs from \"obsidian\";\n\nexport default class PasswordPrompt extends obs.Modal {\n\tconstructor(app: obs.App, file: obs.TAbstractFile, onSubmit: (password: string) => void) {\n\t\tsuper(app);\n\n\t\tthis.setTitle(`Decrypt ${file.name}`);\n\n\t\tconst form = this.contentEl.createEl('form', {  });\n\n\t\tform.addEventListener('submit', e => {\n\t\t\te.preventDefault();\n\n\t\t\tonSubmit((e.target as HTMLFormElement).password.value);\n\n\t\t\tthis.close();\n\t\t})\n\n\t\tnew obs.Setting(form)\n\t\t\t.setName('Password')\n\t\t\t.setDesc('Please enter the password to unlock this note.')\n\t\t\t.addText(text => Object.assign(text.inputEl, {\n\t\t\t\ttype: 'password',\n\t\t\t\tname: 'password',\n\t\t\t\tplaceholder: 'abc123',\n\t\t\t}));\n\n\t\tform.createEl('button', {\n\t\t\ttype: 'submit',\n\t\t\ttext: 'Okay'\n\t\t});\n\t}\n\n\tpublic static async prompt(app: obs.App, file: obs.TAbstractFile): Promise<string> {\n\t\treturn await new Promise(ok =>\n\t\t\tnew PasswordPrompt(app, file, pw => ok(pw))\n\t\t\t\t.open());\n\t}\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,OAAqB;;;ACArB,UAAqB;AAErB,IAAqB,cAArB,cAA6C,qBAAiB;AAAA,EAC1D,UAAgB;AAAA,EAEhB;AACJ;;;ACNA,IAAAC,OAAqB;AAErB,IAAqB,iBAArB,MAAqB,wBAA2B,WAAM;AAAA,EACrD,YAAY,KAAc,MAAyB,UAAsC;AACxF,UAAM,GAAG;AAET,SAAK,SAAS,WAAW,KAAK,IAAI,EAAE;AAEpC,UAAM,OAAO,KAAK,UAAU,SAAS,QAAQ,CAAG,CAAC;AAEjD,SAAK,iBAAiB,UAAU,OAAK;AACpC,QAAE,eAAe;AAEjB,eAAU,EAAE,OAA2B,SAAS,KAAK;AAErD,WAAK,MAAM;AAAA,IACZ,CAAC;AAED,QAAQ,aAAQ,IAAI,EAClB,QAAQ,UAAU,EAClB,QAAQ,gDAAgD,EACxD,QAAQ,UAAQ,OAAO,OAAO,KAAK,SAAS;AAAA,MAC5C,MAAM;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,IACd,CAAC,CAAC;AAEH,SAAK,SAAS,UAAU;AAAA,MACvB,MAAM;AAAA,MACN,MAAM;AAAA,IACP,CAAC;AAAA,EACF;AAAA,EAEA,aAAoB,OAAO,KAAc,MAA0C;AAClF,WAAO,MAAM,IAAI,QAAQ,QACxB,IAAI,gBAAe,KAAK,MAAM,QAAM,GAAG,EAAE,CAAC,EACxC,KAAK,CAAC;AAAA,EACV;AACD;;;AF9BO,IAAM,sBAAsB;AAE5B,IAAM,mBAA6B;AAAA,EACtC,IAAI,OAAO,OAAO,gBAAgB,IAAI,WAAW,EAAE,CAAC;AACxD;AAEA,IAAqB,gBAArB,cAA+C,YAAO;AAAA,EAClD,cAAkC;AAAA,EAClC,WAAqB;AAAA,EAErB,MAAM,SAAS;AACX,SAAK,mBAAmB,CAAC,KAAK,GAAG,UAAU;AAE3C,SAAK,cAAc,KAAK,IAAI,UAAU,GAAG,aAAa,CAAC,MAAM,SAAS,KACjE,QAAQ,UAAQ,KACZ,SAAS,cAAc,EACvB,QAAQ,MAAM,EACd,QAAQ,OAAM,MAAK;AAChB,YAAM,KAAK,MAAM,OAAO,OAAO,OAAO,OAAO,WAAW,IAAI,YAAY,EAAE,OAAO,MAAM,eAAe,OAAO,KAAK,KAAK,IAAI,CAAC,CAAC;AAC7H,YAAM,MAAM,MAAM,OAAO,OAAO,OAAO,UAAU,OAAO,IAAI,WAAW,OAAO,CAAC,WAAW,SAAS,CAAC;AAEpG,YAAM,OAAO,KAAK,IAAI,MAAM,cAAc,KAAK,IAAI;AAEnD,UAAI,CAAC;AACD,eAAO,IAAQ,YAAO,0BAA0B;AAEpD,YAAM,SAAS,MAAM,OAAO,OAAO,OAAO,QAAQ;AAAA,QAC9C,MAAM;AAAA,QACN,IAAI,KAAK,SAAS;AAAA,MACtB,GAAG,KAAK,MAAM,KAAK,IAAI,MAAM,WAAW,IAAI,CAAC;AAE7C,YAAM,KAAK,IAAI,MAAM,OAAO,MAAM,GAAG,KAAK,IAAI,MAAM;AAAA,IACxD,CAAC,CAAC,CAAC,CAAC;AAEZ,SAAK,cAAc,KAAK,IAAI,UAAU,GAAG,aAAa,OAAO,SAAS;AAC9D,UAAI,MAAM,aAAa,MAAO;AAE9B,cAAQ,IAAI,gBAAgB;AAAA,IAChC,CAAC,CAAC;AAEN,SAAK,cAAc,IAAI,YAAY,KAAK,KAAK,IAAI,CAAC;AAAA,EACtD;AACJ;",
  "names": ["obs", "obs"]
}
